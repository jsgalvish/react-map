{"version":3,"sources":["index.js","App.js"],"names":["ReactDOM","render","react_default","a","createElement","_useState","useState","latitude","longitude","width","height","zoom","_useState2","Object","slicedToArray","viewport","setViewport","_useState3","_useState4","selectedPark","setSelectedPark","useEffect","listener","e","key","window","addEventListener","removeEventListener","esm","assign","mapboxApiAccessToken","mapStyle","onViewportChange","parkDate","map","park","properties","PARK_ID","geometry","coordinates","className","onClick","preventDefault","src","alt","onClose","NAME","DESCRIPTIO","document","getElementById"],"mappings":"66HAKAA,IAASC,OAAOC,EAAAC,EAAAC,cCDD,WAAe,IAAAC,EACIC,mBAAS,CACvCC,SAAU,SACVC,WAAY,UACZC,MAAO,QACPC,OAAQ,QACRC,KAAM,KANoBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACrBU,EADqBH,EAAA,GACXI,EADWJ,EAAA,GAAAK,EAQYX,mBAAS,MARrBY,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAQrBE,EARqBD,EAAA,GAQPE,EAROF,EAAA,GAuB5B,OAbAG,oBAAU,WACR,IAAMC,EAAW,SAAAC,GACD,WAAVA,EAAEC,KACJJ,EAAgB,OAKpB,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,KAEvC,IAGDpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAA,EAADf,OAAAgB,OAAA,GACMd,EADN,CAEEe,qBAAqB,+FACrBC,SAAS,sDACTC,iBAAkB,SAAAjB,GAChBC,EAAYD,MAGbkB,IAAkBC,IAAI,SAAAC,GAAI,OACzBjC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEJ,IAAKW,EAAKC,WAAWC,QACrB9B,SAAU4B,EAAKG,SAASC,YAAY,GACpC/B,UAAW2B,EAAKG,SAASC,YAAY,IAErCrC,EAAAC,EAAAC,cAAA,UACEoC,UAAU,aACVC,QAAS,SAAAlB,GACPA,EAAEmB,iBACFtB,EAAgBe,KAGlBjC,EAAAC,EAAAC,cAAA,OAAKuC,IAAI,sBAAsBC,IAAI,wBAKxCzB,EACCjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACErB,SAAUY,EAAamB,SAASC,YAAY,GAC5C/B,UAAWW,EAAamB,SAASC,YAAY,GAC7CM,QAAS,WACPzB,EAAgB,QAGlBlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKe,EAAaiB,WAAWU,MAC7B5C,EAAAC,EAAAC,cAAA,SAAIe,EAAaiB,WAAWW,cAG9B,QD/DI,MAASC,SAASC,eAAe","file":"static/js/main.bf543cbe.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport * as parkDate from \"./data/skateboard-parks.json\";\n\nexport default function App() {\n  const [viewport, setViewport] = useState({\n    latitude: 4.652881,\n    longitude: -74.057582,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 12\n  });\n  const [selectedPark, setSelectedPark] = useState(null);\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoianNnYWx2aXNoIiwiYSI6ImNrN2x6OXdsbTAxaG8zbGxodzUxYTlwbXoifQ.skHwW-diM_PatJm_OZPv1Q\"\n        mapStyle=\"mapbox://styles/jsgalvish/ck7lzvl740cqe1ipeh56ti8vi\"\n        onViewportChange={viewport => {\n          setViewport(viewport);\n        }}\n      >\n        {parkDate.features.map(park => (\n          <Marker\n            key={park.properties.PARK_ID}\n            latitude={park.geometry.coordinates[1]}\n            longitude={park.geometry.coordinates[0]}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <img src=\"./skateboarding.svg\" alt=\"Skate Park Icon\" />\n            </button>\n          </Marker>\n        ))}\n\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.geometry.coordinates[1]}\n            longitude={selectedPark.geometry.coordinates[0]}\n            onClose={() => {\n              setSelectedPark(null);\n            }}\n          >\n            <div>\n              <h2>{selectedPark.properties.NAME}</h2>\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\n            </div>\n          </Popup>\n        ) : null}\n      </ReactMapGL>\n    </div>\n  );\n}\n"],"sourceRoot":""}